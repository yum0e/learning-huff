#define function addTwo(uint256, uint256) view returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload // push the first 32 bytes of calldat to the stack
    0xe0 // 256 bits - 32 bits (28 bytes)
    shr // shift calldataload (here by 28 bytes so that we push only func sig to the stack)

    // Jump to the implementation of the ADD_TWO function if the calldata matches the function selector
    __FUNC_SIG(addTwo) eq addTwo jumpi

    addTwo:
        ADD_TWO()
}


#define macro ADD_TWO() = takes(0) returns(0) {
    0x04 calldataload // [number1]
    0x24 calldataload // [number2]
    add // [number1 + number2]

    0x00 mstore // place [number1 + number2] in the first 32 bytes of memory
    0x20 0x00 return // return the result
}
